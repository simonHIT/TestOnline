<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.testOnline.dao.QuestionMapper">
  <resultMap id="BaseResultMap" type="com.testOnline.model.Question">
    <id column="que_id" jdbcType="INTEGER" property="queId" />
    <result column="que_tag" jdbcType="VARCHAR" property="queTag" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="que_value" jdbcType="VARCHAR" property="queValue" />
    <result column="que_rank" jdbcType="VARCHAR" property="queRank" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.testOnline.model.QuestionWithBLOBs">
    <result column="que_info" jdbcType="LONGVARCHAR" property="queInfo" />
    <result column="que_ans" jdbcType="LONGVARCHAR" property="queAns" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    que_id, que_tag, course_id, que_value, que_rank
  </sql>
  <sql id="Blob_Column_List">
    que_info, que_ans
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.testOnline.model.QuestionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.testOnline.model.QuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question
    where que_id = #{queId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from question
    where que_id = #{queId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.testOnline.model.QuestionExample">
    delete from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.testOnline.model.QuestionWithBLOBs">
    insert into question (que_id, que_tag, course_id, 
      que_value, que_rank, que_info, 
      que_ans)
    values (#{queId,jdbcType=INTEGER}, #{queTag,jdbcType=VARCHAR}, #{courseId,jdbcType=INTEGER}, 
      #{queValue,jdbcType=VARCHAR}, #{queRank,jdbcType=VARCHAR}, #{queInfo,jdbcType=LONGVARCHAR}, 
      #{queAns,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.testOnline.model.QuestionWithBLOBs" useGeneratedKeys="true" keyProperty="queId">
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="queId != null">
        que_id,
      </if>
      <if test="queTag != null">
        que_tag,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="queValue != null">
        que_value,
      </if>
      <if test="queRank != null">
        que_rank,
      </if>
      <if test="queInfo != null">
        que_info,
      </if>
      <if test="queAns != null">
        que_ans,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="queId != null">
        #{queId,jdbcType=INTEGER},
      </if>
      <if test="queTag != null">
        #{queTag,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="queValue != null">
        #{queValue,jdbcType=VARCHAR},
      </if>
      <if test="queRank != null">
        #{queRank,jdbcType=VARCHAR},
      </if>
      <if test="queInfo != null">
        #{queInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="queAns != null">
        #{queAns,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.testOnline.model.QuestionExample" resultType="java.lang.Long">
    select count(*) from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update question
    <set>
      <if test="record.queId != null">
        que_id = #{record.queId,jdbcType=INTEGER},
      </if>
      <if test="record.queTag != null">
        que_tag = #{record.queTag,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.queValue != null">
        que_value = #{record.queValue,jdbcType=VARCHAR},
      </if>
      <if test="record.queRank != null">
        que_rank = #{record.queRank,jdbcType=VARCHAR},
      </if>
      <if test="record.queInfo != null">
        que_info = #{record.queInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.queAns != null">
        que_ans = #{record.queAns,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update question
    set que_id = #{record.queId,jdbcType=INTEGER},
      que_tag = #{record.queTag,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=INTEGER},
      que_value = #{record.queValue,jdbcType=VARCHAR},
      que_rank = #{record.queRank,jdbcType=VARCHAR},
      que_info = #{record.queInfo,jdbcType=LONGVARCHAR},
      que_ans = #{record.queAns,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update question
    set que_id = #{record.queId,jdbcType=INTEGER},
      que_tag = #{record.queTag,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=INTEGER},
      que_value = #{record.queValue,jdbcType=VARCHAR},
      que_rank = #{record.queRank,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.testOnline.model.QuestionWithBLOBs">
    update question
    <set>
      <if test="queTag != null">
        que_tag = #{queTag,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="queValue != null">
        que_value = #{queValue,jdbcType=VARCHAR},
      </if>
      <if test="queRank != null">
        que_rank = #{queRank,jdbcType=VARCHAR},
      </if>
      <if test="queInfo != null">
        que_info = #{queInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="queAns != null">
        que_ans = #{queAns,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where que_id = #{queId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.testOnline.model.QuestionWithBLOBs">
    update question
    set que_tag = #{queTag,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=INTEGER},
      que_value = #{queValue,jdbcType=VARCHAR},
      que_rank = #{queRank,jdbcType=VARCHAR},
      que_info = #{queInfo,jdbcType=LONGVARCHAR},
      que_ans = #{queAns,jdbcType=LONGVARCHAR}
    where que_id = #{queId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.testOnline.model.Question">
    update question
    set que_tag = #{queTag,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=INTEGER},
      que_value = #{queValue,jdbcType=VARCHAR},
      que_rank = #{queRank,jdbcType=VARCHAR}
    where que_id = #{queId,jdbcType=INTEGER}
  </update>
</mapper>