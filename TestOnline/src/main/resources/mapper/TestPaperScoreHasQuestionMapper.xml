<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.testOnline.dao.TestPaperScoreHasQuestionMapper">
  <resultMap id="BaseResultMap" type="com.testOnline.model.TestPaperScoreHasQuestionKey">
    <id column="test_paper_score_record_id" jdbcType="INTEGER" property="testPaperScoreRecordId" />
    <id column="question_que_id" jdbcType="INTEGER" property="questionQueId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    test_paper_score_record_id, question_que_id
  </sql>
  <select id="selectByExample" parameterType="com.testOnline.model.TestPaperScoreHasQuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_paper_score_has_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.testOnline.model.TestPaperScoreHasQuestionKey">
    delete from test_paper_score_has_question
    where test_paper_score_record_id = #{testPaperScoreRecordId,jdbcType=INTEGER}
      and question_que_id = #{questionQueId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.testOnline.model.TestPaperScoreHasQuestionExample">
    delete from test_paper_score_has_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.testOnline.model.TestPaperScoreHasQuestionKey">
    insert into test_paper_score_has_question (test_paper_score_record_id, question_que_id
      )
    values (#{testPaperScoreRecordId,jdbcType=INTEGER}, #{questionQueId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.testOnline.model.TestPaperScoreHasQuestionKey">
    insert into test_paper_score_has_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testPaperScoreRecordId != null">
        test_paper_score_record_id,
      </if>
      <if test="questionQueId != null">
        question_que_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testPaperScoreRecordId != null">
        #{testPaperScoreRecordId,jdbcType=INTEGER},
      </if>
      <if test="questionQueId != null">
        #{questionQueId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.testOnline.model.TestPaperScoreHasQuestionExample" resultType="java.lang.Long">
    select count(*) from test_paper_score_has_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_paper_score_has_question
    <set>
      <if test="record.testPaperScoreRecordId != null">
        test_paper_score_record_id = #{record.testPaperScoreRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.questionQueId != null">
        question_que_id = #{record.questionQueId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_paper_score_has_question
    set test_paper_score_record_id = #{record.testPaperScoreRecordId,jdbcType=INTEGER},
      question_que_id = #{record.questionQueId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <!-- 批量插入 -->
  <insert id="insertTestPaperHasQList" parameterType="java.util.List">
    insert into test_paper_score_has_question (test_paper_score_record_id, question_que_id)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.testPaperScoreRecordId,jdbcType=INTEGER}, #{item.questionQueId,jdbcType=INTEGER})
    </foreach>
  </insert>

</mapper>